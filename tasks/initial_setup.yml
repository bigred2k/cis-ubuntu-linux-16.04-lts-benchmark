---

- name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install cramfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install freevxfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install jffs2 /bin/true'
    state: present
    create: yes

- name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install hfs /bin/true'
    state: present
    create: yes

- name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install hfsplus /bin/true'
    state: present
    create: yes

- name: 1.1.1.6 Ensure mounting of udf filesystems is disabled (Scored)
  lineinfile:
    path: /etc/modprobe.d/CIS.conf
    line: 'install udf /bin/true'
    state: present
    create: yes


- name: 1.1.14 Ensure nodev option set on /dev/shm partition (Scored)
  shell: mount | grep /dev/shm|grep nodev
  register: mount_dev_shm
  failed_when: False
  ignore_errors: True
  changed_when: False

# Dowe still need to modify fstab?
- name: 1.1.14 Ensure nodev option set on /dev/shm partition (Scored)
  command: mount -o remount,nodev /home
  ignore_errors: True
  when: mount_dev_shm.rc == 1

- name: 1.1.15 Ensure nosuid option set on /dev/shm partition (Scored)
  shell: mount | grep /dev/shm|grep nosuid
  register: mount_dev_shm
  failed_when: False
  ignore_errors: True
  changed_when: False

# Dowe still need to modify fstab?
- name: 1.1.15 Ensure nosuid option set on /dev/shm partition (Scored)
  command: mount -o remount,nosuid /dev/shm
  ignore_errors: True
  when: mount_dev_shm.rc == 1


- name: 1.1.16 Ensure noexec option set on /dev/shm partition (Scored)
  shell: mount | grep /dev/shm|grep noexec
  register: mount_dev_shm_output
  failed_when: false
  ignore_errors: True
  changed_when: False

# Dowe still need to modify fstab?
- name: 1.1.16 Ensure noexec option set on /dev/shm partition (Scored)
  command: mount -o remount,noexec /dev/shm
  ignore_errors: True
  when: mount_dev_shm.rc == 1

- name: 1.1.20 Ensure sticky bit is set on all world-writable directories (Scored)
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 -print 2>/dev/null
  failed_when: False
  changed_when: False
  check_mode: no
  register: sticky_bit_dirs

- name: 1.1.20 Ensure sticky bit is set on all world-writable directories (Scored)
  file:
      path: "{{ item }}"
      mode: "a+t"
  with_items: "{{ sticky_bit_dirs.stdout_lines }}"

- name: 1.1.21 Disable Automounting (Scored)
  shell: dpkg -l| grep autofs
  register: autofs
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.1.21 Disable Automounting (Scored)
  systemd:
    name: autofs
    enabled: no
  when: autofs.rc == 0

# Why does this cause alterations?
- name: 1.2.1 Ensure package manager repositories are configured (Not Scored)
  lineinfile:
    path: /etc/apt/sources.list
    line: '{{ item }}'
    state: present
    create: yes
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial main restricted'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates main restricted'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial universe'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates universe'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial-updates multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse'
    - 'deb http://security.ubuntu.com/ubuntu xenial-security main restricted'
    - 'deb http://security.ubuntu.com/ubuntu xenial-security universe'
    - 'deb http://security.ubuntu.com/ubuntu xenial-security multiverse'

- name: 1.2.2 Ensure GPG keys are configured (Not Scored)
  lineinfile:
    path: /etc/apt/apt.conf.d/99GPG-apt
    line: 'APT::Get::AllowUnauthenticated "false";'
    state: present
    create: yes

- name: 1.3.1 Ensure AIDE is installed (Scored)
  apt:
    name: aide
    state: present
  register: aide_installed
  when: enable_aide == True

- name: 1.3.2 Ensure filesystem integrity is regularly checked (Scored)
  cron:
    name: "Check files integrity"
    minute: 0
    hour: 5
    job: "/usr/bin/aide --config /etc/aide/aide.conf --check "
  when: enable_aide == True

- name: 1.4.1 Ensure permissions on bootloader config are configured (Scored)
  file:
    path: /boot/grub/grub.cfg
    owner: root
    group: root
    mode: 0600

- name: 1.4.2 Ensure bootloader password is set (Scored)
  command: grep "^password" /boot/grub/grub.cfg
  register: boot_password
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.4.2 Ensure bootloader password is set (Scored)
  lineinfile:
      path: /etc/grub.d/40_custom
      regexp: '^{{ item.name }}'
      line: '{{ item.name }}{{ item.value }} {{ item.value2 }}'
      state: present
  with_items:
    - { name: 'set superusers=' , value: '"root"' , value2: '' }
    - { name: 'password_pbkdf2 ' , value: 'root' , value2: '{{ grub_password }}' }
  notify: update grub
  when: boot_password.rc == 1
 
- name: 1.4.3 Ensure authentication required for single user mode (Scored)
  command: grep "^root:[*\!]:" /etc/shadow
  register: root_password_set
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.4.3 Ensure authentication required for single user mode (Scored)
  user:
    name: root
    state: present
    password: "{{ root_password }}"
  when: root_password_set.rc == 0 and root_password != "disabled"

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  command: grep "hard core" /etc/security/limits.conf
  register: hard_core
  failed_when: False
  changed_when: False

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  lineinfile:
    path: '/etc/security/limits.conf'
    line: '* hard core 0'
    state: present
    insertbefore: '^# End of file'
  when: hard_core.rc != 0

- name: 1.5.1 Ensure core dumps are restricted (Scored)
  sysctl:
    name: fs.suid_dumpable
    value: 0
    state: present

- name: 1.5.2 Ensure XD/NX support is enabled (Not Scored)
  shell: 'dmesg | grep NX'
  register: nx_result
  failed_when: nx_result.rc == 1
  changed_when: False
  ignore_errors: True # Ignore for virtual machines without support like AWS

- name: 1.5.3 Ensure address space layout randomization (ASLR) is enabled (Scored)
  sysctl:
    name: kernel.randomize_va_space
    value: 2
    state: present

- name: 1.5.4 Ensure prelink is disabled (Scored)
  apt:
    name: prelink
    state: absent

- name: 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration (Scored)
  lineinfile: 
    path: /etc/default/grub
    line: '{{ item }}'
    state: present
  with_items:
    - 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"' 
    - 'GRUB_CMDLINE_LINUX=""'
  notify: update grub
  when: access_control == "selinux"

- name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
  command: dpkg -l selinux
  register: selinux_installed
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
  apt:
    name: selinux
    state: present
  ignore_errors: True
  when: selinux_installed.rc == 1 and access_control == "selinux"

- name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
  command: dpkg -l apparmor
  register: apparmor_installed
  failed_when: False
  ignore_errors: True
  changed_when: False

- name: 1.6.3 Ensure SELinux or AppArmor are installed (Not Scored)
  apt:
    name: apparmor
    state: present
  when: apparmor_installed.rc == 1 and access_control == "apparmor"

- name: 1.6.1.2 Ensure the SELinux state is enforcing (Scored)
  lineinfile:
    path: /etc/selinux/config
    line: 'SELINUX={{ selinux_mode }}'
    state: present
  when: selinux_installed.rc == 0 and access_control == "selinux"

- name: 1.6.1.3 Ensure SELinux policy is configured (Scored)
  lineinfile:
    path: /etc/selinux/config
    line: 'SELINUXTYPE=ubuntu'
    state: present
  when: selinux_installed.rc == 0 and access_control == "selinux"

- name: 1.6.1.4 Ensure no unconfined daemons exist (Scored)
  shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{print $NF }'
  when: selinux_installed.rc == 0 and access_control == "selinux"

- name: 1.6.2.1 Ensure AppArmor is not disabled in bootloader configuration (Scored)
  command: sed -i -r 's/apparmor=0//g' /boot/grub/grub.cfg
  notify: update grub
  when: access_control == "apparmor"

- name: 1.6.2.2 Ensure all AppArmor Profiles are enforcing (Scored)
  shell : apparmor_status|grep "0 processes are in complain mode"
  register: apparmor_status_enforcing
  failed_when: False
  changed_when: False
  when: access_control == "apparmor"

- name: 1.6.2.2 Ensure all AppArmor Profiles are enforcing (Scored)
  shell : apparmor_status|grep "0 processes are unconfined"
  register: apparmor_status_unconfined
  failed_when: False
  changed_when: False
  when: access_control == "apparmor"

- name: 1.6.2.2 Ensure all AppArmor Profiles are enforcing (Scored)
  shell: aa-enforce /etc/apparmor.d/*
  when:  access_control == "apparmor" and apparmor_status_enforcing.rc == 1 and apparmor_status_unconfined == 1

- name: 1.7.1.1 Ensure message of the day is configured properly (Scored)
  lineinfile:
    path: /etc/motd
    create: yes
    line: 'Authorized uses only. All activity may be monitored and reported.'
    state: present

- name: 1.7.1.2 Ensure local login warning banner is configured properly (Not Scored)
  shell: egrep '(\\v|\\r|\\m|\\s)' /etc/issue
  register: warning_banner
  failed_when: warning_banner.rc == 0
  changed_when: False

- name: 1.7.1.3 Ensure remote login warning banner is configured properly (Not Scored)
  shell: egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
  register: warning_banner
  failed_when: warning_banner.rc == 0
  changed_when: False

- name: 1.7.1.4 Ensure permissions on /etc/motd are configured (Not Scored)
  file:
    path: /etc/motd
    owner: root
    group: root 
    mode: 0644

- name: 1.7.1.5 Ensure permissions on /etc/issue are configured (Scored)
  file: 
    path: /etc/issue
    owner: root 
    group: root 
    mode: 0644

- name: 1.7.1.6 Ensure permissions on /etc/issue.net are configured (Not Scored)
  file:
    path: /etc/issue.net
    owner: root
    group: root
    mode: 0644

- name: 1.7.2 Ensure GDM login banner is configured (Scored)
  stat:
    path: /etc/dconf/profile/gdm
  register: gdm_banner 

- name: 1.7.2 Ensure GDM login banner is configured (Scored)
  lineinfile:
    path: /etc/dconf/profile/gdm
    regexp: '{{ item.regexp }}'
  with_items:
    - { regexp: '^user-db:user' }
    - { regexp: '^system-db:gdm' }
    - { regexp: '^file-db:/usr/share/gdm/greeter-dconf-defaults' }
  when: gdm_banner.stat.exists == True 

- name: 1.7.2 Ensure GDM login banner is configured (Scored)
  lineinfile:
    path: /etc/dconf/db/gdm.d/01-banner-message
    create: yes
    regexp: "{{ item.regexp }}"
  with_items:
    - { regexp: '^[org/gnome/login-screen]' }
    - { regexp: '^banner-message-enable=true' }
    - { regexp: '^banner-message-text="Authorized uses only. All activity may be monitored and reported."^\' }
  when: gdm_banner.stat.exists == True 

- name: 1.8 Ensure updates, patches, and additional security software are installed (Not Scored)
  apt:
    update_cache: yes
    cache_valid_time: "3600"
    upgrade: yes
